syntax = "proto3";
package rollapp.staking;

import "cosmos/msg/v1/msg.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/staking/v1beta1/tx.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/staking/types";

service Msg {
  // CreateValidator defines a method for creating a new validator.
  rpc CreateValidatorERC20(MsgCreateValidator) returns (MsgCreateValidatorResponse);

  // Delegate defines a method for performing a delegation of coins
  // from a delegator to a validator.
  rpc DelegateERC20(MsgDelegate) returns (MsgDelegateResponse);



}

// MsgCreateValidator defines a SDK message for creating a new validator.
message MsgCreateValidator {
  cosmos.staking.v1beta1.MsgCreateValidator value = 1;
}

// MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
message MsgCreateValidatorResponse {
  cosmos.staking.v1beta1.MsgCreateValidatorResponse value = 1;
}

// MsgDelegate defines a SDK message for performing a delegation of coins
// from a delegator to a validator.
message MsgDelegate {
  cosmos.staking.v1beta1.MsgDelegate value = 1;
}

// MsgDelegateResponse defines the Msg/Delegate response type.
message MsgDelegateResponse {
  cosmos.staking.v1beta1.MsgDelegateResponse value = 1;
}
