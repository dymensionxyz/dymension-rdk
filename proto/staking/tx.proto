syntax = "proto3";
package rollapp.staking;

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/staking/v1beta1/tx.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/staking/types";

service Msg {
  // CreateValidator defines a method for creating a new validator.
  rpc CreateValidatorERC20(MsgCreateValidatorERC20) returns (cosmos.staking.v1beta1.MsgCreateValidatorResponse);

  // Delegate defines a method for performing a delegation of coins
  // from a delegator to a validator.
  rpc DelegateERC20(MsgDelegateERC20) returns (cosmos.staking.v1beta1.MsgDelegateResponse);



}

// MsgCreateValidatorERC20 defines a SDK message for creating a new validator.
message MsgCreateValidatorERC20 {
  cosmos.staking.v1beta1.MsgCreateValidator value = 1 [(gogoproto.nullable) = false];
}


// MsgDelegateERC20 defines a SDK message for performing a delegation of coins
// from a delegator to a validator.
message MsgDelegateERC20 {
  cosmos.staking.v1beta1.MsgDelegate value = 1 [(gogoproto.nullable) = false];
}
