syntax = "proto3";
package rollapp.dividends;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos/base/v1beta1/coin.proto";
import "dividends/gauge.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/dividends/types";

service Msg {
  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
  rpc CreateGauge(MsgCreateGauge) returns (MsgCreateGaugeResponse);
}

// MsgCreateGauge creates a gague to distribute rewards to users
message MsgCreateGauge {
  option (cosmos.msg.v1.signer) = "authority";

  // Authority is the address that controls the module.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // query_condition is *where* the gauge rewards are distributed to
  QueryCondition query_condition = 2 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how long* the gauge rewards are distributed to
  VestingCondition vesting_condition = 3 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how frequent* the gauge rewards are distributed to
  VestingFrequency vesting_frequency = 4;
}

message MsgCreateGaugeResponse {}

// MsgUpdateParams allows to update module params.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  // Authority is the address that controls the module.
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  // NewParams should be fully populated.
  Params new_params = 2 [ (gogoproto.nullable) = false ];
}

message MsgUpdateParamsResponse {}
