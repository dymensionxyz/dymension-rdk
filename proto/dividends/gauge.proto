syntax = "proto3";
package rollapp.dividends;

import "gogoproto/gogo.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/dividends/types";

// Params holds parameters for the incentives module
message Params {
  // distr_epoch_identifier is what epoch type distribution will be triggered by
  // (day, week, etc.)
  string distr_epoch_identifier = 1;
}

// Gauge is an object that stores and distributes yields to recipients who
// satisfy certain conditions.
message Gauge {
  // id is the unique ID of a gauge
  uint64 id = 1;
  // address is a bech32-formatted address that holds the tokens to allocate
  string address = 2;
  // active is a flag to show if the gauge is active
  bool active = 3;
  // approved_denoms is a list of allowed tokens: only gov can approve tokens
  // that can be used for dividends
  repeated string approved_denoms = 4;
  // query_condition is *where* the gauge rewards are distributed to
  QueryCondition query_condition = 5 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how long* the gauge rewards are distributed to
  VestingCondition vesting_condition = 6 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how frequent* the gauge rewards are distributed to
  VestingFrequency vesting_frequency = 7;
}

message QueryCondition {
  oneof condition {
    QueryConditionStakers stakers = 1;
  }
}

message VestingCondition {
  oneof condition {
    VestingConditionPerpetual perpetual = 1;
    VestingConditionLimited limited = 2;
  }
}

enum VestingFrequency {
  VESTING_FREQUENCY_UNSPECIFIED = 0;
  VESTING_FREQUENCY_BLOCK = 1;
  VESTING_FREQUENCY_EPOCH = 2;
}

// QueryConditionStakers queries the stakers
message QueryConditionStakers {}

// VestingConditionPerpetual is a vesting condition that distributes rewards
// infinitely. Perpetual gauges distribute all their tokens at a single time
// and only distribute their tokens again once the gauge is refilled.
//
// Non-perpetual gauges distribute their tokens equally per period while the
// gauge is in the active period. Perpetual gauges distribute all their tokens
// at a single time and only distribute their tokens again once the gauge is
// refilled.
message VestingConditionPerpetual {}

// VestingConditionLimited is a vesting condition that distributes rewards over
// the specified time. Non-perpetual gauges distribute their tokens equally per
// period while the gauge is in the active period.
message VestingConditionLimited {
  // num_units is the number of total epochs/blocks distribution will be
  // completed over
  int64 num_units = 1;
  // filled_epochs is the number of epochs/blocks distribution has been
  // completed on already
  int64 filled_units = 2;
}
