syntax = "proto3";
package rollapp.dividends;

import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "dividends/gauge.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/dividends/types";

message EventUpdateParams {
  string authority = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
  Params new_params = 2 [ (gogoproto.nullable) = false ];
  Params old_params = 3 [ (gogoproto.nullable) = false ];
}

message EventCreateGauge {
  // gauge_id is the ID of the gauge to update
  uint64 gauge_id = 1;
  // approved_denoms is a list of allowed tokens
  repeated string approved_denoms = 2;
  // query_condition is *where* the gauge rewards are distributed to
  QueryCondition query_condition = 3 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how long* the gauge rewards are distributed to
  VestingCondition vesting_condition = 4 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how frequent* the gauge rewards are distributed to
  VestingFrequency vesting_frequency = 5;
}

message EventUpdateGauge {
  // gauge_id is the ID of the gauge to update
  uint64 gauge_id = 1;
  // approved_denoms is a list of allowed tokens
  repeated string approved_denoms = 2;
  // query_condition is *where* the gauge rewards are distributed to
  QueryCondition query_condition = 3 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how long* the gauge rewards are distributed to
  VestingCondition vesting_condition = 4 [ (gogoproto.nullable) = false ];
  // vesting_condition is *how frequent* the gauge rewards are distributed to
  VestingFrequency vesting_frequency = 5;
}

message EventDeactivateGauge {
  // gauge_id is the ID of the gauge to update
  uint64 gauge_id = 1;
}