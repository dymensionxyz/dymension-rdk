syntax = "proto3";
package rollapp.governors.types;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "governors/staking.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/staking/v1beta1/staking.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/governors/types";

// Query defines the gRPC querier service.
service Query {
  // Governors queries all governors that match the given status.
  rpc Governors(QueryGovernorsRequest) returns (QueryGovernorsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors";
  }

  // Governor queries governor info for given governor address.
  rpc Governor(QueryGovernorRequest) returns (QueryGovernorResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors/{governor_addr}";
  }

  // GovernorDelegations queries delegate info for given governor.
  rpc GovernorDelegations(QueryGovernorDelegationsRequest) returns (QueryGovernorDelegationsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors/{governor_addr}/delegations";
  }

  // GovernorUnbondingDelegations queries unbonding delegations of a governor.
  rpc GovernorUnbondingDelegations(QueryGovernorUnbondingDelegationsRequest)
      returns (QueryGovernorUnbondingDelegationsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors/"
                                   "{governor_addr}/unbonding_delegations";
  }

  // Delegation queries delegate info for given governor delegator pair.
  rpc Delegation(QueryDelegationRequest) returns (QueryDelegationResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors/{governor_addr}/delegations/"
                                   "{delegator_addr}";
  }

  // UnbondingDelegation queries unbonding info for given governor delegator
  // pair.
  rpc UnbondingDelegation(QueryUnbondingDelegationRequest) returns (QueryUnbondingDelegationResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/governors/{governor_addr}/delegations/"
                                   "{delegator_addr}/unbonding_delegation";
  }

  // DelegatorDelegations queries all delegations of a given delegator address.
  rpc DelegatorDelegations(QueryDelegatorDelegationsRequest) returns (QueryDelegatorDelegationsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/delegations/{delegator_addr}";
  }

  // DelegatorUnbondingDelegations queries all unbonding delegations of a given
  // delegator address.
  rpc DelegatorUnbondingDelegations(QueryDelegatorUnbondingDelegationsRequest)
      returns (QueryDelegatorUnbondingDelegationsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/delegators/"
                                   "{delegator_addr}/unbonding_delegations";
  }

  // Redelegations queries redelegations of given address.
  rpc Redelegations(QueryRedelegationsRequest) returns (QueryRedelegationsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/delegators/{delegator_addr}/redelegations";
  }

  // DelegatorGovernors queries all governors info for given delegator
  // address.
  rpc DelegatorGovernors(QueryDelegatorGovernorsRequest) returns (QueryDelegatorGovernorsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/delegators/{delegator_addr}/governors";
  }

  // DelegatorGovernor queries governor info for given delegator governor
  // pair.
  rpc DelegatorGovernor(QueryDelegatorGovernorRequest) returns (QueryDelegatorGovernorResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/delegators/{delegator_addr}/governors/"
                                   "{governor_addr}";
  }

  // Pool queries the pool info.
  rpc Pool(QueryPoolRequest) returns (QueryPoolResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/pool";
  }

  // Parameters queries the staking parameters.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/dymensionxyz/dymension-rdk/governors/params";
  }
}

// QueryGovernorsRequest is request type for Query/Governors RPC method.
message QueryGovernorsRequest {
  // status enables to query for governors matching a given status.
  string status = 1;

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryGovernorsResponse is response type for the Query/Governors RPC method
message QueryGovernorsResponse {
  // governors contains all the queried governors.
  repeated Governor governors = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGovernorRequest is response type for the Query/Governor RPC method
message QueryGovernorRequest {
  // governor_addr defines the governor address to query for.
  string governor_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryGovernorResponse is response type for the Query/Governor RPC method
message QueryGovernorResponse {
  // governor defines the governor info.
  Governor governor = 1 [(gogoproto.nullable) = false];
}

// QueryGovernorDelegationsRequest is request type for the
// Query/GovernorDelegations RPC method
message QueryGovernorDelegationsRequest {
  // governor_addr defines the governor address to query for.
  string governor_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryGovernorDelegationsResponse is response type for the
// Query/GovernorDelegations RPC method
message QueryGovernorDelegationsResponse {
  repeated  cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryGovernorUnbondingDelegationsRequest is required type for the
// Query/GovernorUnbondingDelegations RPC method
message QueryGovernorUnbondingDelegationsRequest {
  // governor_addr defines the governor address to query for.
  string governor_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryGovernorUnbondingDelegationsResponse is response type for the
// Query/GovernorUnbondingDelegations RPC method.
message QueryGovernorUnbondingDelegationsResponse {
  repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegationRequest is request type for the Query/Delegation RPC method.
message QueryDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // governor_addr defines the governor address to query for.
  string governor_addr = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryDelegationResponse is response type for the Query/Delegation RPC method.
message QueryDelegationResponse {
  // delegation_responses defines the delegation info of a delegation.
  cosmos.staking.v1beta1.DelegationResponse delegation_response = 1;
}

// QueryUnbondingDelegationRequest is request type for the
// Query/UnbondingDelegation RPC method.
message QueryUnbondingDelegationRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // governor_addr defines the governor address to query for.
  string governor_addr = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryDelegationResponse is response type for the Query/UnbondingDelegation
// RPC method.
message QueryUnbondingDelegationResponse {
  // unbond defines the unbonding information of a delegation.
  cosmos.staking.v1beta1.UnbondingDelegation unbond = 1 [(gogoproto.nullable) = false];
}

// QueryDelegatorDelegationsRequest is request type for the
// Query/DelegatorDelegations RPC method.
message QueryDelegatorDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorDelegationsResponse is response type for the
// Query/DelegatorDelegations RPC method.
message QueryDelegatorDelegationsResponse {
  // delegation_responses defines all the delegations' info of a delegator.
  repeated cosmos.staking.v1beta1.DelegationResponse delegation_responses = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorUnbondingDelegationsRequest is request type for the
// Query/DelegatorUnbondingDelegations RPC method.
message QueryDelegatorUnbondingDelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryUnbondingDelegatorDelegationsResponse is response type for the
// Query/UnbondingDelegatorDelegations RPC method.
message QueryDelegatorUnbondingDelegationsResponse {
  repeated cosmos.staking.v1beta1.UnbondingDelegation unbonding_responses = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryRedelegationsRequest is request type for the Query/Redelegations RPC
// method.
message QueryRedelegationsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // src_governor_addr defines the governor address to redelegate from.
  string src_governor_addr = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // dst_governor_addr defines the governor address to redelegate to.
  string dst_governor_addr = 3 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 4;
}

// QueryRedelegationsResponse is response type for the Query/Redelegations RPC
// method.
message QueryRedelegationsResponse {
  repeated cosmos.staking.v1beta1.RedelegationResponse redelegation_responses = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorGovernorsRequest is request type for the
// Query/DelegatorGovernors RPC method.
message QueryDelegatorGovernorsRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryDelegatorGovernorsResponse is response type for the
// Query/DelegatorGovernors RPC method.
message QueryDelegatorGovernorsResponse {
  // governors defines the governors' info of a delegator.
  repeated Governor governors = 1 [(gogoproto.nullable) = false];

  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryDelegatorGovernorRequest is request type for the
// Query/DelegatorGovernor RPC method.
message QueryDelegatorGovernorRequest {
  option (gogoproto.equal)           = false;
  option (gogoproto.goproto_getters) = false;

  // delegator_addr defines the delegator address to query for.
  string delegator_addr = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // governor_addr defines the governor address to query for.
  string governor_addr = 2 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

// QueryDelegatorGovernorResponse response type for the
// Query/DelegatorGovernor RPC method.
message QueryDelegatorGovernorResponse {
  // governor defines the governor info.
  Governor governor = 1 [(gogoproto.nullable) = false];
}

// QueryPoolRequest is request type for the Query/Pool RPC method.
message QueryPoolRequest {}

// QueryPoolResponse is response type for the Query/Pool RPC method.
message QueryPoolResponse {
  // pool defines the pool info.
  Pool pool = 1 [(gogoproto.nullable) = false];
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}
