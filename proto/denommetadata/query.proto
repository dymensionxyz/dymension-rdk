syntax = "proto3";
package rollapp.denommetadata.types;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "denommetadata/params.proto";

option go_package = "github.com/dymensionxyz/dymension-rdk/x/denommetadata/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters retrieves the denom metadata module params
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get =
        "/dymensionxyz/dymension-rdk/denommetadata/params";
  }
  // Queries an IBC denom base on denom trace
  rpc IBCDenomByDenomTrace(QueryGetIBCDenomByDenomTraceRequest)
      returns (QueryIBCDenomByDenomTraceResponse) {
    option (google.api.http).get =
        "/dymensionxyz/dymension-rdk/denommetadata/ibc_denom/{denom_trace}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

// QueryGetIBCDenomByDenomTraceRequest is the request type for the
// Query/IBCDenomByDenomTrace RPC method.
message QueryGetIBCDenomByDenomTraceRequest {
  // denom trace of a denom
  string denom_trace = 1;
}

// QueryIBCDenomByDenomTraceResponse is the response type for the
// Query/IBCDenomByDenomTrace RPC method.
message QueryIBCDenomByDenomTraceResponse {
  // ibc denom base on denom trace
  string ibc_denom = 1;
}